name: Builder

on:
  push:
    branches: "*"
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/builder.yml"
  pull_request:
    branches: "*"
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/builder.yml"
  workflow_dispatch:

env:
  PRODUCT: Beacon
  CGO_ENABLED: 0
  GO111MODULE: on

jobs:
  build:
    name: ${{ matrix.job.GOOS }}-${{ matrix.job.GOARCH }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - { GOOS: "windows", GOARCH: "amd64", os: "windows-latest" }
          - { GOOS: "windows", GOARCH: "386", os: "windows-latest" }
          - { GOOS: "windows", GOARCH: "arm64", os: "windows-latest" }
          - { GOOS: "darwin", GOARCH: "amd64", os: "macos-latest" }
          - { GOOS: "darwin", GOARCH: "arm64", os: "macos-latest" }
          - { GOOS: "linux", GOARCH: "amd64", os: "ubuntu-latest" }
          - { GOOS: "linux", GOARCH: "386", os: "ubuntu-latest" }
          - { GOOS: "linux", GOARCH: "arm64", os: "ubuntu-latest" }
        exclude:
          - GOOS: darwin
            GOARCH: 386
    continue-on-error: true
    env:
      GOOS: ${{ matrix.GOOS }}
      GOARCH: ${{ matrix.GOARCH }}
#      GOARM: ${{ matrix.arm }}
#      GOMIPS: ${{ matrix.mips }}
#      GOMIPS64: ${{ matrix.mips64 }}
#      GOMIPSLE: ${{ matrix.mipsle }}
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Check out code base
        if: github.event_name == 'push'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check out code base
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cache go module
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Install pnpm and dependencies
        run: |
          npm install -g pnpm
          cd server/frontend
          pnpm install

      - name: Build
        run: |
          cd server/frontend
          pnpm build

      - name: Build binary
        id: builder
        run: |
          ARGS="${GOOS}-${GOARCH}"
          if [[ -n "${GOARM}" ]]; then
            ARGS="${ARGS}v${GOARM}"
          elif [[ -n "${GOMIPS}" ]]; then
            ARGS="${ARGS}-${GOMIPS}"
          elif [[ -n "${GOMIPS64}" ]]; then
            ARGS="${ARGS}-${GOMIPS64}"
          elif [[ -n "${GOMIPSLE}" ]]; then
            ARGS="${ARGS}-${GOMIPSLE}"
          fi
          go build -trimpath --ldflags "-s -w -buildid=" -v -o ./bin/${{ env.PRODUCT }}-${ARGS}
          echo "::set-output name=filename::${{ env.PRODUCT }}-${ARGS}"

      - name: Upload binary artifacts2
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.builder.outputs.filename }}
          path: ./bin/${{ env.PRODUCT }}*
          if-no-files-found: error